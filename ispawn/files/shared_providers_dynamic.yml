# Dynamic configuration for Traefik
tls:
  certificates:
    - certFile: /etc/traefik/certs/cert.pem
      keyFile: /etc/traefik/certs/key.pem
      {% if mode == "remote" and cert_mode == "provided" %}
      stores:
        - default
      {% endif %}

  options:
    default:
      minVersion: VersionTLS12
      sniStrict: true
      cipherSuites:
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305

http:
  middlewares:
    secure-headers:
      headers:
        sslRedirect: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 31536000
        customFrameOptionsValue: "SAMEORIGIN"
        contentTypeNosniff: true
        browserXssFilter: true
        referrerPolicy: "strict-origin-when-cross-origin"
        permissionsPolicy: "camera=(), microphone=(), geolocation=(), payment=()"
        customResponseHeaders:
          X-Robots-Tag: "noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex"
          Server: ""

  routers:
    # Redirect HTTP to HTTPS
    http-to-https:
      entryPoints:
        - web
      middlewares:
        - redirect-to-https
      rule: "HostRegexp(`{host:.+}`)"
      service: noop
      priority: 1

    # Handle HTTPS traffic
    secure:
      entryPoints:
        - websecure
      middlewares:
        - secure-headers
      rule: "HostRegexp(`{host:.+}`)"
      service: noop
      tls: {}
      priority: 2

  middlewares:
    redirect-to-https:
      redirectScheme:
        scheme: https
        permanent: true

  services:
    # Noop service for redirect rules
    noop:
      loadBalancer:
        servers:
          - url: "http://192.168.0.1"
